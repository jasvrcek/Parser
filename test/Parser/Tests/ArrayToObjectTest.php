<?php
/**
 * Generated by PHPUnit_SkeletonGenerator on 2012-07-04 at 14:50:16.
 */

use Parser\TestObjects\TestObjectCollection;
use Parser\TestObjects\TestObject;

class Parser_Tests_ArrayToObjectTest extends PHPUnit_Framework_TestCase
{
    /**
     * @var Parser\ArrayToObject
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new Parser\ArrayToObject;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers Parser\ArrayToObject::getOutput
     */
    public function testGetOutput()
    {
        //no recursion
        $testArray = array(
                    'first_property'  => 1,
                    'second_property' => 2
                );
        $actual = $this->object->getOutput($testArray, array(
                    'class_name' => '\\Parser\\TestObjects\\TestObject'
                ));
        
        $testObject = new TestObject();
        $testObject
            ->setFirstProperty(1)
            ->setSecondProperty(2);
        
        $this->assertEquals($testObject, $actual);
        
        //with recursion
        $testObjectTwo = new TestObject();
        $testObjectTwo
            ->setFirstProperty(3)
            ->setSecondProperty(4);
        
        $collection = new TestObjectCollection();
        $collection
            ->addItem($testObject)
            ->addItem($testObjectTwo);
        
        $testObjectThree = new TestObject();
        $testObjectThree
            ->setFirstProperty('string')
            ->setSecondProperty('another string')
            ->setTestObjects($collection);
        
        $testArray = array(
            'first_property'  => 'string',
            'second_property' => 'another string',
            'test_objects' => array(
                 array(
                    'first_property'  => 1,
                    'second_property' => 2
                 ),
                 array(
                     'first_property'  => 3,
                     'second_property' => 4
                 )
             )
        );
        
        $actual = $this->object->getOutput($testArray, array(
            'class_name' => '\\Parser\\TestObjects\\TestObject',
            'child_namespaces' => array(
                'test_objects' => '\\Parser\\TestObjects'
            )
        ));
        
        $this->assertEquals($testObjectThree, $actual);
    }
}